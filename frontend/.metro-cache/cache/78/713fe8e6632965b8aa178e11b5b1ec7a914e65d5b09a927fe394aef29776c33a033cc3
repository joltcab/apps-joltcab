{"dependencies":[{"name":"zustand","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"POPvx7yS3Y3wz+S/9OAefiXNs0Q=","exportNames":["*"],"imports":1}},{"name":"../services/api","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":34},"end":{"line":2,"column":34,"index":68}}],"key":"Pr5/EB33W7mJGi+ygccy+pUf1E8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useTripStore\", {\n    enumerable: true,\n    get: function () {\n      return useTripStore;\n    }\n  });\n  var _zustand = require(_dependencyMap[0], \"zustand\");\n  var _servicesApi = require(_dependencyMap[1], \"../services/api\");\n  var api = _interopDefault(_servicesApi);\n  const useTripStore = (0, _zustand.create)((set, get) => ({\n    currentTrip: null,\n    trips: [],\n    loading: false,\n    createTrip: async (userUid, userName, userLocation, destinationLocation, paymentMethod) => {\n      set({\n        loading: true\n      });\n      try {\n        console.log('🚗 Creating trip with /createtrip...');\n        const response = await api.default.post('/createtrip', {\n          user_uid: userUid,\n          user_name: userName,\n          user_location: {\n            latitude: userLocation.latitude,\n            longitude: userLocation.longitude,\n            address: userLocation.address\n          },\n          destination_location: {\n            latitude: destinationLocation.latitude,\n            longitude: destinationLocation.longitude,\n            address: destinationLocation.address\n          },\n          payment_method: paymentMethod\n        });\n        if (response.data.success) {\n          console.log('✅ Trip created:', response.data.trip_id || response.data.ride_id);\n          const trip = {\n            id: response.data.trip_id || response.data.ride_id,\n            user_id: userUid,\n            driver_id: response.data.driver_uid || undefined,\n            pickup_location: userLocation,\n            dropoff_location: destinationLocation,\n            status: response.data.status || 'requested',\n            payment_method: paymentMethod,\n            fare: response.data.fare || 0,\n            distance: response.data.distance || 0,\n            created_at: response.data.created_at || new Date().toISOString()\n          };\n          set({\n            currentTrip: trip,\n            loading: false\n          });\n          return trip;\n        } else {\n          throw new Error(response.data.message || 'Failed to create trip');\n        }\n      } catch (error) {\n        console.error('❌ Create trip failed:', error.response?.data?.message || error.message);\n        set({\n          loading: false\n        });\n        throw new Error(error.response?.data?.message || 'Failed to create trip');\n      }\n    },\n    getTrips: async userUid => {\n      set({\n        loading: true\n      });\n      try {\n        console.log('📋 Fetching trips with /userhistory...');\n        const response = await api.default.post('/userhistory', {\n          user_uid: userUid\n        });\n        if (response.data.success && response.data.trips) {\n          const trips = response.data.trips.map(ride => ({\n            id: ride.trip_id || ride.ride_id || ride.id,\n            user_id: ride.user_uid,\n            driver_id: ride.driver_uid || undefined,\n            pickup_location: ride.user_location ? {\n              latitude: ride.user_location._latitude || ride.user_location.latitude,\n              longitude: ride.user_location._longitude || ride.user_location.longitude,\n              address: ride.user_location.address || 'Pickup location'\n            } : undefined,\n            dropoff_location: {\n              latitude: ride.destination_location._latitude || ride.destination_location.latitude,\n              longitude: ride.destination_location._longitude || ride.destination_location.longitude,\n              address: ride.destination_address\n            },\n            status: ride.status,\n            payment_method: ride.payment_method || 'card',\n            fare: ride.fare || 0,\n            distance: ride.distance || 0,\n            rating: ride.rating,\n            review: ride.review,\n            created_at: ride.created_at\n          }));\n          console.log(`✅ Loaded ${trips.length} trips`);\n          set({\n            trips,\n            loading: false\n          });\n        } else {\n          set({\n            trips: [],\n            loading: false\n          });\n        }\n      } catch (error) {\n        console.error('❌ Failed to load trips');\n        set({\n          trips: [],\n          loading: false\n        });\n      }\n    },\n    getTripById: async tripId => {\n      try {\n        console.log('🔍 Fetching trip status with /usergettripstatus...');\n        const response = await api.default.post('/usergettripstatus', {\n          trip_id: tripId\n        });\n        if (response.data.success && response.data.trip) {\n          const ride = response.data.trip;\n          return {\n            id: ride.trip_id || ride.ride_id,\n            user_id: ride.user_uid,\n            driver_id: ride.driver_uid,\n            pickup_location: ride.user_location,\n            dropoff_location: {\n              latitude: ride.destination_location._latitude || ride.destination_location.latitude,\n              longitude: ride.destination_location._longitude || ride.destination_location.longitude,\n              address: ride.destination_address\n            },\n            status: ride.status,\n            payment_method: ride.payment_method,\n            fare: ride.fare || 0,\n            distance: ride.distance || 0,\n            created_at: ride.created_at\n          };\n        }\n        throw new Error('Trip not found');\n      } catch (error) {\n        throw new Error(error.response?.data?.message || 'Failed to get trip');\n      }\n    },\n    rateTrip: async (rideId, userUid, rating, review) => {\n      try {\n        console.log('⭐ Rating ride...');\n        await api.default.post('/rate_ride', {\n          ride_id: rideId,\n          user_uid: userUid,\n          rating,\n          review\n        });\n        console.log('✅ Rating submitted');\n        await get().getTrips(userUid);\n      } catch (error) {\n        throw new Error(error.response?.data?.message || 'Failed to rate trip');\n      }\n    },\n    cancelTrip: async (rideId, userUid) => {\n      try {\n        console.log('❌ Cancelling ride...');\n        await api.default.post('/cancel_ride', {\n          ride_id: rideId,\n          user_uid: userUid\n        });\n        console.log('✅ Ride cancelled');\n        set({\n          currentTrip: null\n        });\n        await get().getTrips(userUid);\n      } catch (error) {\n        throw new Error(error.response?.data?.message || 'Failed to cancel trip');\n      }\n    },\n    setCurrentTrip: trip => {\n      set({\n        currentTrip: trip\n      });\n    }\n  }));\n});","lineCount":194,"map":[[12,2,17,0,"Object"],[12,8,17,0],[12,9,17,0,"defineProperty"],[12,23,17,0],[12,24,17,0,"exports"],[12,31,17,0],[13,4,17,0,"enumerable"],[13,14,17,0],[14,4,17,0,"get"],[14,7,17,0],[14,18,17,0,"get"],[14,19,17,0],[15,6,17,0],[15,13,17,0,"useTripStore"],[15,25,17,0],[16,4,17,0],[17,2,17,0],[18,2,1,0],[18,6,1,0,"_zustand"],[18,14,1,0],[18,17,1,0,"require"],[18,24,1,0],[18,25,1,0,"_dependencyMap"],[18,39,1,0],[19,2,2,0],[19,6,2,0,"_servicesApi"],[19,18,2,0],[19,21,2,0,"require"],[19,28,2,0],[19,29,2,0,"_dependencyMap"],[19,43,2,0],[20,2,2,0],[20,6,2,0,"api"],[20,9,2,0],[20,12,2,0,"_interopDefault"],[20,27,2,0],[20,28,2,0,"_servicesApi"],[20,40,2,0],[21,2,17,7],[21,8,17,13,"useTripStore"],[21,20,17,25],[21,23,17,28],[21,27,17,28,"create"],[21,35,17,34],[21,36,17,34,"create"],[21,42,17,34],[21,44,17,46],[21,45,17,47,"set"],[21,48,17,50],[21,50,17,52,"get"],[21,53,17,55],[21,59,17,61],[22,4,18,2,"currentTrip"],[22,15,18,13],[22,17,18,15],[22,21,18,19],[23,4,19,2,"trips"],[23,9,19,7],[23,11,19,9],[23,13,19,11],[24,4,20,2,"loading"],[24,11,20,9],[24,13,20,11],[24,18,20,16],[25,4,22,2,"createTrip"],[25,14,22,12],[25,16,22,14],[25,22,22,14,"createTrip"],[25,23,22,21,"userUid"],[25,30,22,28],[25,32,22,30,"userName"],[25,40,22,38],[25,42,22,40,"userLocation"],[25,54,22,52],[25,56,22,54,"destinationLocation"],[25,75,22,73],[25,77,22,75,"paymentMethod"],[25,90,22,88],[25,95,22,93],[26,6,23,4,"set"],[26,9,23,7],[26,10,23,8],[27,8,23,10,"loading"],[27,15,23,17],[27,17,23,19],[28,6,23,24],[28,7,23,25],[28,8,23,26],[29,6,24,4],[29,10,24,8],[30,8,25,6,"console"],[30,15,25,13],[30,16,25,14,"log"],[30,19,25,17],[30,20,25,18],[30,58,25,56],[30,59,25,57],[31,8,26,6],[31,14,26,12,"response"],[31,22,26,20],[31,25,26,23],[31,31,26,29,"api"],[31,34,26,32],[31,35,26,32,"default"],[31,42,26,32],[31,43,26,33,"post"],[31,47,26,37],[31,48,26,38],[31,61,26,51],[31,63,26,53],[32,10,27,8,"user_uid"],[32,18,27,16],[32,20,27,18,"userUid"],[32,27,27,25],[33,10,28,8,"user_name"],[33,19,28,17],[33,21,28,19,"userName"],[33,29,28,27],[34,10,29,8,"user_location"],[34,23,29,21],[34,25,29,23],[35,12,30,10,"latitude"],[35,20,30,18],[35,22,30,20,"userLocation"],[35,34,30,32],[35,35,30,33,"latitude"],[35,43,30,41],[36,12,31,10,"longitude"],[36,21,31,19],[36,23,31,21,"userLocation"],[36,35,31,33],[36,36,31,34,"longitude"],[36,45,31,43],[37,12,32,10,"address"],[37,19,32,17],[37,21,32,19,"userLocation"],[37,33,32,31],[37,34,32,32,"address"],[38,10,33,8],[38,11,33,9],[39,10,34,8,"destination_location"],[39,30,34,28],[39,32,34,30],[40,12,35,10,"latitude"],[40,20,35,18],[40,22,35,20,"destinationLocation"],[40,41,35,39],[40,42,35,40,"latitude"],[40,50,35,48],[41,12,36,10,"longitude"],[41,21,36,19],[41,23,36,21,"destinationLocation"],[41,42,36,40],[41,43,36,41,"longitude"],[41,52,36,50],[42,12,37,10,"address"],[42,19,37,17],[42,21,37,19,"destinationLocation"],[42,40,37,38],[42,41,37,39,"address"],[43,10,38,8],[43,11,38,9],[44,10,39,8,"payment_method"],[44,24,39,22],[44,26,39,24,"paymentMethod"],[45,8,40,6],[45,9,40,7],[45,10,40,8],[46,8,42,6],[46,12,42,10,"response"],[46,20,42,18],[46,21,42,19,"data"],[46,25,42,23],[46,26,42,24,"success"],[46,33,42,31],[46,35,42,33],[47,10,43,8,"console"],[47,17,43,15],[47,18,43,16,"log"],[47,21,43,19],[47,22,43,20],[47,39,43,37],[47,41,43,39,"response"],[47,49,43,47],[47,50,43,48,"data"],[47,54,43,52],[47,55,43,53,"trip_id"],[47,62,43,60],[47,66,43,64,"response"],[47,74,43,72],[47,75,43,73,"data"],[47,79,43,77],[47,80,43,78,"ride_id"],[47,87,43,85],[47,88,43,86],[48,10,44,8],[48,16,44,14,"trip"],[48,20,44,18],[48,23,44,21],[49,12,45,10,"id"],[49,14,45,12],[49,16,45,14,"response"],[49,24,45,22],[49,25,45,23,"data"],[49,29,45,27],[49,30,45,28,"trip_id"],[49,37,45,35],[49,41,45,39,"response"],[49,49,45,47],[49,50,45,48,"data"],[49,54,45,52],[49,55,45,53,"ride_id"],[49,62,45,60],[50,12,46,10,"user_id"],[50,19,46,17],[50,21,46,19,"userUid"],[50,28,46,26],[51,12,47,10,"driver_id"],[51,21,47,19],[51,23,47,21,"response"],[51,31,47,29],[51,32,47,30,"data"],[51,36,47,34],[51,37,47,35,"driver_uid"],[51,47,47,45],[51,51,47,49,"undefined"],[51,60,47,58],[52,12,48,10,"pickup_location"],[52,27,48,25],[52,29,48,27,"userLocation"],[52,41,48,39],[53,12,49,10,"dropoff_location"],[53,28,49,26],[53,30,49,28,"destinationLocation"],[53,49,49,47],[54,12,50,10,"status"],[54,18,50,16],[54,20,50,18,"response"],[54,28,50,26],[54,29,50,27,"data"],[54,33,50,31],[54,34,50,32,"status"],[54,40,50,38],[54,44,50,42],[54,55,50,53],[55,12,51,10,"payment_method"],[55,26,51,24],[55,28,51,26,"paymentMethod"],[55,41,51,39],[56,12,52,10,"fare"],[56,16,52,14],[56,18,52,16,"response"],[56,26,52,24],[56,27,52,25,"data"],[56,31,52,29],[56,32,52,30,"fare"],[56,36,52,34],[56,40,52,38],[56,41,52,39],[57,12,53,10,"distance"],[57,20,53,18],[57,22,53,20,"response"],[57,30,53,28],[57,31,53,29,"data"],[57,35,53,33],[57,36,53,34,"distance"],[57,44,53,42],[57,48,53,46],[57,49,53,47],[58,12,54,10,"created_at"],[58,22,54,20],[58,24,54,22,"response"],[58,32,54,30],[58,33,54,31,"data"],[58,37,54,35],[58,38,54,36,"created_at"],[58,48,54,46],[58,52,54,50],[58,56,54,54,"Date"],[58,60,54,58],[58,61,54,59],[58,62,54,60],[58,63,54,61,"toISOString"],[58,74,54,72],[58,75,54,73],[59,10,55,8],[59,11,55,17],[60,10,57,8,"set"],[60,13,57,11],[60,14,57,12],[61,12,57,14,"currentTrip"],[61,23,57,25],[61,25,57,27,"trip"],[61,29,57,31],[62,12,57,33,"loading"],[62,19,57,40],[62,21,57,42],[63,10,57,48],[63,11,57,49],[63,12,57,50],[64,10,58,8],[64,17,58,15,"trip"],[64,21,58,19],[65,8,59,6],[65,9,59,7],[65,15,59,13],[66,10,60,8],[66,16,60,14],[66,20,60,18,"Error"],[66,25,60,23],[66,26,60,24,"response"],[66,34,60,32],[66,35,60,33,"data"],[66,39,60,37],[66,40,60,38,"message"],[66,47,60,45],[66,51,60,49],[66,74,60,72],[66,75,60,73],[67,8,61,6],[68,6,62,4],[68,7,62,5],[68,8,62,6],[68,15,62,13,"error"],[68,20,62,23],[68,22,62,25],[69,8,63,6,"console"],[69,15,63,13],[69,16,63,14,"error"],[69,21,63,19],[69,22,63,20],[69,45,63,43],[69,47,63,45,"error"],[69,52,63,50],[69,53,63,51,"response"],[69,61,63,59],[69,63,63,61,"data"],[69,67,63,65],[69,69,63,67,"message"],[69,76,63,74],[69,80,63,78,"error"],[69,85,63,83],[69,86,63,84,"message"],[69,93,63,91],[69,94,63,92],[70,8,64,6,"set"],[70,11,64,9],[70,12,64,10],[71,10,64,12,"loading"],[71,17,64,19],[71,19,64,21],[72,8,64,27],[72,9,64,28],[72,10,64,29],[73,8,65,6],[73,14,65,12],[73,18,65,16,"Error"],[73,23,65,21],[73,24,65,22,"error"],[73,29,65,27],[73,30,65,28,"response"],[73,38,65,36],[73,40,65,38,"data"],[73,44,65,42],[73,46,65,44,"message"],[73,53,65,51],[73,57,65,55],[73,80,65,78],[73,81,65,79],[74,6,66,4],[75,4,67,2],[75,5,67,3],[76,4,69,2,"getTrips"],[76,12,69,10],[76,14,69,12],[76,20,69,19,"userUid"],[76,27,69,34],[76,31,69,39],[77,6,70,4,"set"],[77,9,70,7],[77,10,70,8],[78,8,70,10,"loading"],[78,15,70,17],[78,17,70,19],[79,6,70,24],[79,7,70,25],[79,8,70,26],[80,6,71,4],[80,10,71,8],[81,8,72,6,"console"],[81,15,72,13],[81,16,72,14,"log"],[81,19,72,17],[81,20,72,18],[81,60,72,58],[81,61,72,59],[82,8,73,6],[82,14,73,12,"response"],[82,22,73,20],[82,25,73,23],[82,31,73,29,"api"],[82,34,73,32],[82,35,73,32,"default"],[82,42,73,32],[82,43,73,33,"post"],[82,47,73,37],[82,48,73,38],[82,62,73,52],[82,64,73,54],[83,10,74,8,"user_uid"],[83,18,74,16],[83,20,74,18,"userUid"],[84,8,75,6],[84,9,75,7],[84,10,75,8],[85,8,77,6],[85,12,77,10,"response"],[85,20,77,18],[85,21,77,19,"data"],[85,25,77,23],[85,26,77,24,"success"],[85,33,77,31],[85,37,77,35,"response"],[85,45,77,43],[85,46,77,44,"data"],[85,50,77,48],[85,51,77,49,"trips"],[85,56,77,54],[85,58,77,56],[86,10,78,8],[86,16,78,14,"trips"],[86,21,78,19],[86,24,78,22,"response"],[86,32,78,30],[86,33,78,31,"data"],[86,37,78,35],[86,38,78,36,"trips"],[86,43,78,41],[86,44,78,42,"map"],[86,47,78,45],[86,48,78,47,"ride"],[86,52,78,56],[86,57,78,62],[87,12,79,10,"id"],[87,14,79,12],[87,16,79,14,"ride"],[87,20,79,18],[87,21,79,19,"trip_id"],[87,28,79,26],[87,32,79,30,"ride"],[87,36,79,34],[87,37,79,35,"ride_id"],[87,44,79,42],[87,48,79,46,"ride"],[87,52,79,50],[87,53,79,51,"id"],[87,55,79,53],[88,12,80,10,"user_id"],[88,19,80,17],[88,21,80,19,"ride"],[88,25,80,23],[88,26,80,24,"user_uid"],[88,34,80,32],[89,12,81,10,"driver_id"],[89,21,81,19],[89,23,81,21,"ride"],[89,27,81,25],[89,28,81,26,"driver_uid"],[89,38,81,36],[89,42,81,40,"undefined"],[89,51,81,49],[90,12,82,10,"pickup_location"],[90,27,82,25],[90,29,82,27,"ride"],[90,33,82,31],[90,34,82,32,"user_location"],[90,47,82,45],[90,50,82,48],[91,14,83,12,"latitude"],[91,22,83,20],[91,24,83,22,"ride"],[91,28,83,26],[91,29,83,27,"user_location"],[91,42,83,40],[91,43,83,41,"_latitude"],[91,52,83,50],[91,56,83,54,"ride"],[91,60,83,58],[91,61,83,59,"user_location"],[91,74,83,72],[91,75,83,73,"latitude"],[91,83,83,81],[92,14,84,12,"longitude"],[92,23,84,21],[92,25,84,23,"ride"],[92,29,84,27],[92,30,84,28,"user_location"],[92,43,84,41],[92,44,84,42,"_longitude"],[92,54,84,52],[92,58,84,56,"ride"],[92,62,84,60],[92,63,84,61,"user_location"],[92,76,84,74],[92,77,84,75,"longitude"],[92,86,84,84],[93,14,85,12,"address"],[93,21,85,19],[93,23,85,21,"ride"],[93,27,85,25],[93,28,85,26,"user_location"],[93,41,85,39],[93,42,85,40,"address"],[93,49,85,47],[93,53,85,51],[94,12,86,10],[94,13,86,11],[94,16,86,14,"undefined"],[94,25,86,23],[95,12,87,10,"dropoff_location"],[95,28,87,26],[95,30,87,28],[96,14,88,12,"latitude"],[96,22,88,20],[96,24,88,22,"ride"],[96,28,88,26],[96,29,88,27,"destination_location"],[96,49,88,47],[96,50,88,48,"_latitude"],[96,59,88,57],[96,63,88,61,"ride"],[96,67,88,65],[96,68,88,66,"destination_location"],[96,88,88,86],[96,89,88,87,"latitude"],[96,97,88,95],[97,14,89,12,"longitude"],[97,23,89,21],[97,25,89,23,"ride"],[97,29,89,27],[97,30,89,28,"destination_location"],[97,50,89,48],[97,51,89,49,"_longitude"],[97,61,89,59],[97,65,89,63,"ride"],[97,69,89,67],[97,70,89,68,"destination_location"],[97,90,89,88],[97,91,89,89,"longitude"],[97,100,89,98],[98,14,90,12,"address"],[98,21,90,19],[98,23,90,21,"ride"],[98,27,90,25],[98,28,90,26,"destination_address"],[99,12,91,10],[99,13,91,11],[100,12,92,10,"status"],[100,18,92,16],[100,20,92,18,"ride"],[100,24,92,22],[100,25,92,23,"status"],[100,31,92,29],[101,12,93,10,"payment_method"],[101,26,93,24],[101,28,93,26,"ride"],[101,32,93,30],[101,33,93,31,"payment_method"],[101,47,93,45],[101,51,93,49],[101,57,93,55],[102,12,94,10,"fare"],[102,16,94,14],[102,18,94,16,"ride"],[102,22,94,20],[102,23,94,21,"fare"],[102,27,94,25],[102,31,94,29],[102,32,94,30],[103,12,95,10,"distance"],[103,20,95,18],[103,22,95,20,"ride"],[103,26,95,24],[103,27,95,25,"distance"],[103,35,95,33],[103,39,95,37],[103,40,95,38],[104,12,96,10,"rating"],[104,18,96,16],[104,20,96,18,"ride"],[104,24,96,22],[104,25,96,23,"rating"],[104,31,96,29],[105,12,97,10,"review"],[105,18,97,16],[105,20,97,18,"ride"],[105,24,97,22],[105,25,97,23,"review"],[105,31,97,29],[106,12,98,10,"created_at"],[106,22,98,20],[106,24,98,22,"ride"],[106,28,98,26],[106,29,98,27,"created_at"],[107,10,99,8],[107,11,99,9],[107,12,99,10],[107,13,99,11],[108,10,101,8,"console"],[108,17,101,15],[108,18,101,16,"log"],[108,21,101,19],[108,22,101,20],[108,34,101,32,"trips"],[108,39,101,37],[108,40,101,38,"length"],[108,46,101,44],[108,54,101,52],[108,55,101,53],[109,10,102,8,"set"],[109,13,102,11],[109,14,102,12],[110,12,102,14,"trips"],[110,17,102,19],[111,12,102,21,"loading"],[111,19,102,28],[111,21,102,30],[112,10,102,36],[112,11,102,37],[112,12,102,38],[113,8,103,6],[113,9,103,7],[113,15,103,13],[114,10,104,8,"set"],[114,13,104,11],[114,14,104,12],[115,12,104,14,"trips"],[115,17,104,19],[115,19,104,21],[115,21,104,23],[116,12,104,25,"loading"],[116,19,104,32],[116,21,104,34],[117,10,104,40],[117,11,104,41],[117,12,104,42],[118,8,105,6],[119,6,106,4],[119,7,106,5],[119,8,106,6],[119,15,106,13,"error"],[119,20,106,18],[119,22,106,20],[120,8,107,6,"console"],[120,15,107,13],[120,16,107,14,"error"],[120,21,107,19],[120,22,107,20],[120,46,107,44],[120,47,107,45],[121,8,108,6,"set"],[121,11,108,9],[121,12,108,10],[122,10,108,12,"trips"],[122,15,108,17],[122,17,108,19],[122,19,108,21],[123,10,108,23,"loading"],[123,17,108,30],[123,19,108,32],[124,8,108,38],[124,9,108,39],[124,10,108,40],[125,6,109,4],[126,4,110,2],[126,5,110,3],[127,4,112,2,"getTripById"],[127,15,112,13],[127,17,112,15],[127,23,112,22,"tripId"],[127,29,112,36],[127,33,112,41],[128,6,113,4],[128,10,113,8],[129,8,114,6,"console"],[129,15,114,13],[129,16,114,14,"log"],[129,19,114,17],[129,20,114,18],[129,72,114,70],[129,73,114,71],[130,8,115,6],[130,14,115,12,"response"],[130,22,115,20],[130,25,115,23],[130,31,115,29,"api"],[130,34,115,32],[130,35,115,32,"default"],[130,42,115,32],[130,43,115,33,"post"],[130,47,115,37],[130,48,115,38],[130,68,115,58],[130,70,115,60],[131,10,116,8,"trip_id"],[131,17,116,15],[131,19,116,17,"tripId"],[132,8,117,6],[132,9,117,7],[132,10,117,8],[133,8,119,6],[133,12,119,10,"response"],[133,20,119,18],[133,21,119,19,"data"],[133,25,119,23],[133,26,119,24,"success"],[133,33,119,31],[133,37,119,35,"response"],[133,45,119,43],[133,46,119,44,"data"],[133,50,119,48],[133,51,119,49,"trip"],[133,55,119,53],[133,57,119,55],[134,10,120,8],[134,16,120,14,"ride"],[134,20,120,18],[134,23,120,21,"response"],[134,31,120,29],[134,32,120,30,"data"],[134,36,120,34],[134,37,120,35,"trip"],[134,41,120,39],[135,10,121,8],[135,17,121,15],[136,12,122,10,"id"],[136,14,122,12],[136,16,122,14,"ride"],[136,20,122,18],[136,21,122,19,"trip_id"],[136,28,122,26],[136,32,122,30,"ride"],[136,36,122,34],[136,37,122,35,"ride_id"],[136,44,122,42],[137,12,123,10,"user_id"],[137,19,123,17],[137,21,123,19,"ride"],[137,25,123,23],[137,26,123,24,"user_uid"],[137,34,123,32],[138,12,124,10,"driver_id"],[138,21,124,19],[138,23,124,21,"ride"],[138,27,124,25],[138,28,124,26,"driver_uid"],[138,38,124,36],[139,12,125,10,"pickup_location"],[139,27,125,25],[139,29,125,27,"ride"],[139,33,125,31],[139,34,125,32,"user_location"],[139,47,125,45],[140,12,126,10,"dropoff_location"],[140,28,126,26],[140,30,126,28],[141,14,127,12,"latitude"],[141,22,127,20],[141,24,127,22,"ride"],[141,28,127,26],[141,29,127,27,"destination_location"],[141,49,127,47],[141,50,127,48,"_latitude"],[141,59,127,57],[141,63,127,61,"ride"],[141,67,127,65],[141,68,127,66,"destination_location"],[141,88,127,86],[141,89,127,87,"latitude"],[141,97,127,95],[142,14,128,12,"longitude"],[142,23,128,21],[142,25,128,23,"ride"],[142,29,128,27],[142,30,128,28,"destination_location"],[142,50,128,48],[142,51,128,49,"_longitude"],[142,61,128,59],[142,65,128,63,"ride"],[142,69,128,67],[142,70,128,68,"destination_location"],[142,90,128,88],[142,91,128,89,"longitude"],[142,100,128,98],[143,14,129,12,"address"],[143,21,129,19],[143,23,129,21,"ride"],[143,27,129,25],[143,28,129,26,"destination_address"],[144,12,130,10],[144,13,130,11],[145,12,131,10,"status"],[145,18,131,16],[145,20,131,18,"ride"],[145,24,131,22],[145,25,131,23,"status"],[145,31,131,29],[146,12,132,10,"payment_method"],[146,26,132,24],[146,28,132,26,"ride"],[146,32,132,30],[146,33,132,31,"payment_method"],[146,47,132,45],[147,12,133,10,"fare"],[147,16,133,14],[147,18,133,16,"ride"],[147,22,133,20],[147,23,133,21,"fare"],[147,27,133,25],[147,31,133,29],[147,32,133,30],[148,12,134,10,"distance"],[148,20,134,18],[148,22,134,20,"ride"],[148,26,134,24],[148,27,134,25,"distance"],[148,35,134,33],[148,39,134,37],[148,40,134,38],[149,12,135,10,"created_at"],[149,22,135,20],[149,24,135,22,"ride"],[149,28,135,26],[149,29,135,27,"created_at"],[150,10,136,8],[150,11,136,9],[151,8,137,6],[152,8,138,6],[152,14,138,12],[152,18,138,16,"Error"],[152,23,138,21],[152,24,138,22],[152,40,138,38],[152,41,138,39],[153,6,139,4],[153,7,139,5],[153,8,139,6],[153,15,139,13,"error"],[153,20,139,23],[153,22,139,25],[154,8,140,6],[154,14,140,12],[154,18,140,16,"Error"],[154,23,140,21],[154,24,140,22,"error"],[154,29,140,27],[154,30,140,28,"response"],[154,38,140,36],[154,40,140,38,"data"],[154,44,140,42],[154,46,140,44,"message"],[154,53,140,51],[154,57,140,55],[154,77,140,75],[154,78,140,76],[155,6,141,4],[156,4,142,2],[156,5,142,3],[157,4,144,2,"rateTrip"],[157,12,144,10],[157,14,144,12],[157,20,144,12,"rateTrip"],[157,21,144,19,"rideId"],[157,27,144,33],[157,29,144,35,"userUid"],[157,36,144,50],[157,38,144,52,"rating"],[157,44,144,66],[157,46,144,68,"review"],[157,52,144,83],[157,57,144,88],[158,6,145,4],[158,10,145,8],[159,8,146,6,"console"],[159,15,146,13],[159,16,146,14,"log"],[159,19,146,17],[159,20,146,18],[159,38,146,36],[159,39,146,37],[160,8,147,6],[160,14,147,12,"api"],[160,17,147,15],[160,18,147,15,"default"],[160,25,147,15],[160,26,147,16,"post"],[160,30,147,20],[160,31,147,21],[160,43,147,33],[160,45,147,35],[161,10,148,8,"ride_id"],[161,17,148,15],[161,19,148,17,"rideId"],[161,25,148,23],[162,10,149,8,"user_uid"],[162,18,149,16],[162,20,149,18,"userUid"],[162,27,149,25],[163,10,150,8,"rating"],[163,16,150,14],[164,10,151,8,"review"],[165,8,152,6],[165,9,152,7],[165,10,152,8],[166,8,153,6,"console"],[166,15,153,13],[166,16,153,14,"log"],[166,19,153,17],[166,20,153,18],[166,40,153,38],[166,41,153,39],[167,8,154,6],[167,14,154,12,"get"],[167,17,154,15],[167,18,154,16],[167,19,154,17],[167,20,154,18,"getTrips"],[167,28,154,26],[167,29,154,27,"userUid"],[167,36,154,34],[167,37,154,35],[168,6,155,4],[168,7,155,5],[168,8,155,6],[168,15,155,13,"error"],[168,20,155,23],[168,22,155,25],[169,8,156,6],[169,14,156,12],[169,18,156,16,"Error"],[169,23,156,21],[169,24,156,22,"error"],[169,29,156,27],[169,30,156,28,"response"],[169,38,156,36],[169,40,156,38,"data"],[169,44,156,42],[169,46,156,44,"message"],[169,53,156,51],[169,57,156,55],[169,78,156,76],[169,79,156,77],[170,6,157,4],[171,4,158,2],[171,5,158,3],[172,4,160,2,"cancelTrip"],[172,14,160,12],[172,16,160,14],[172,22,160,14,"cancelTrip"],[172,23,160,21,"rideId"],[172,29,160,35],[172,31,160,37,"userUid"],[172,38,160,52],[172,43,160,57],[173,6,161,4],[173,10,161,8],[174,8,162,6,"console"],[174,15,162,13],[174,16,162,14,"log"],[174,19,162,17],[174,20,162,18],[174,42,162,40],[174,43,162,41],[175,8,163,6],[175,14,163,12,"api"],[175,17,163,15],[175,18,163,15,"default"],[175,25,163,15],[175,26,163,16,"post"],[175,30,163,20],[175,31,163,21],[175,45,163,35],[175,47,163,37],[176,10,164,8,"ride_id"],[176,17,164,15],[176,19,164,17,"rideId"],[176,25,164,23],[177,10,165,8,"user_uid"],[177,18,165,16],[177,20,165,18,"userUid"],[178,8,166,6],[178,9,166,7],[178,10,166,8],[179,8,167,6,"console"],[179,15,167,13],[179,16,167,14,"log"],[179,19,167,17],[179,20,167,18],[179,38,167,36],[179,39,167,37],[180,8,168,6,"set"],[180,11,168,9],[180,12,168,10],[181,10,168,12,"currentTrip"],[181,21,168,23],[181,23,168,25],[182,8,168,30],[182,9,168,31],[182,10,168,32],[183,8,169,6],[183,14,169,12,"get"],[183,17,169,15],[183,18,169,16],[183,19,169,17],[183,20,169,18,"getTrips"],[183,28,169,26],[183,29,169,27,"userUid"],[183,36,169,34],[183,37,169,35],[184,6,170,4],[184,7,170,5],[184,8,170,6],[184,15,170,13,"error"],[184,20,170,23],[184,22,170,25],[185,8,171,6],[185,14,171,12],[185,18,171,16,"Error"],[185,23,171,21],[185,24,171,22,"error"],[185,29,171,27],[185,30,171,28,"response"],[185,38,171,36],[185,40,171,38,"data"],[185,44,171,42],[185,46,171,44,"message"],[185,53,171,51],[185,57,171,55],[185,80,171,78],[185,81,171,79],[186,6,172,4],[187,4,173,2],[187,5,173,3],[188,4,175,2,"setCurrentTrip"],[188,18,175,16],[188,20,175,19,"trip"],[188,24,175,36],[188,28,175,41],[189,6,176,4,"set"],[189,9,176,7],[189,10,176,8],[190,8,176,10,"currentTrip"],[190,19,176,21],[190,21,176,23,"trip"],[191,6,176,28],[191,7,176,29],[191,8,176,30],[192,4,177,2],[193,2,178,0],[193,3,178,1],[193,4,178,2],[193,5,178,3],[194,0,178,4],[194,3]],"functionMap":{"names":["<global>","create$argument_0","createTrip","getTrips","response.data.trips.map$argument_0","getTripById","rateTrip","cancelTrip","setCurrentTrip"],"mappings":"AAA;8CCgB;cCK;GD6C;YEE;8CCS;UDqB;GFW;eIE;GJ8B;YKE;GLc;cME;GNa;kBOE;GPE;EDC"},"hasCjsExports":false},"type":"js/module"}]}