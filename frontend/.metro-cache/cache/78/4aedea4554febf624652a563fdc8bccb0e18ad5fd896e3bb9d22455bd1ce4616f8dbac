{"dependencies":[{"name":"zustand","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"POPvx7yS3Y3wz+S/9OAefiXNs0Q=","exportNames":["*"],"imports":1}},{"name":"../services/api","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":34},"end":{"line":2,"column":34,"index":68}}],"key":"Pr5/EB33W7mJGi+ygccy+pUf1E8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useNegotiationStore\", {\n    enumerable: true,\n    get: function () {\n      return useNegotiationStore;\n    }\n  });\n  var _zustand = require(_dependencyMap[0], \"zustand\");\n  var _servicesApi = require(_dependencyMap[1], \"../services/api\");\n  var api = _interopDefault(_servicesApi);\n  const useNegotiationStore = (0, _zustand.create)((set, get) => ({\n    currentNegotiation: null,\n    offers: [],\n    loading: false,\n    createNegotiableTrip: async (userUid, userName, pickupLocation, destinationLocation, suggestedPrice) => {\n      set({\n        loading: true\n      });\n      try {\n        console.log('💰 Creating negotiable trip...');\n        const response = await api.default.post('/trip/negotiable/create', {\n          user_uid: userUid,\n          user_name: userName,\n          pickup_location: {\n            latitude: pickupLocation.latitude,\n            longitude: pickupLocation.longitude,\n            address: pickupLocation.address\n          },\n          destination_location: {\n            latitude: destinationLocation.latitude,\n            longitude: destinationLocation.longitude,\n            address: destinationLocation.address\n          },\n          suggested_price: suggestedPrice,\n          negotiable: true\n        });\n        if (response.data.success) {\n          console.log('✅ Negotiable trip created:', response.data.trip_id);\n          set({\n            currentNegotiation: response.data,\n            loading: false\n          });\n          return response.data;\n        } else {\n          throw new Error(response.data.message || 'Failed to create negotiable trip');\n        }\n      } catch (error) {\n        console.error('❌ Create negotiable trip failed:', error.message);\n        set({\n          loading: false\n        });\n        throw new Error(error.response?.data?.message || 'Failed to create negotiable trip');\n      }\n    },\n    getOffers: async tripId => {\n      try {\n        console.log('📋 Fetching offers...');\n        const response = await api.default.post('/trip/offers/list', {\n          trip_id: tripId\n        });\n        if (response.data.success && response.data.offers) {\n          console.log(`✅ Loaded ${response.data.offers.length} offers`);\n          set({\n            offers: response.data.offers\n          });\n        }\n      } catch (error) {\n        console.error('❌ Failed to load offers');\n      }\n    },\n    acceptOffer: async (tripId, offerId) => {\n      try {\n        console.log('✅ Accepting offer...');\n        const response = await api.default.post('/trip/offer/accept', {\n          trip_id: tripId,\n          offer_id: offerId\n        });\n        if (response.data.success) {\n          console.log('✅ Offer accepted!');\n          set({\n            currentNegotiation: null,\n            offers: []\n          });\n        }\n      } catch (error) {\n        throw new Error(error.response?.data?.message || 'Failed to accept offer');\n      }\n    },\n    rejectOffer: async offerId => {\n      try {\n        console.log('❌ Rejecting offer...');\n        await api.default.post('/trip/offer/reject', {\n          offer_id: offerId\n        });\n\n        // Remove from local list\n        set(state => ({\n          offers: state.offers.filter(o => o.offer_id !== offerId)\n        }));\n      } catch (error) {\n        throw new Error(error.response?.data?.message || 'Failed to reject offer');\n      }\n    }\n  }));\n});","lineCount":115,"map":[[12,2,25,0,"Object"],[12,8,25,0],[12,9,25,0,"defineProperty"],[12,23,25,0],[12,24,25,0,"exports"],[12,31,25,0],[13,4,25,0,"enumerable"],[13,14,25,0],[14,4,25,0,"get"],[14,7,25,0],[14,18,25,0,"get"],[14,19,25,0],[15,6,25,0],[15,13,25,0,"useNegotiationStore"],[15,32,25,0],[16,4,25,0],[17,2,25,0],[18,2,1,0],[18,6,1,0,"_zustand"],[18,14,1,0],[18,17,1,0,"require"],[18,24,1,0],[18,25,1,0,"_dependencyMap"],[18,39,1,0],[19,2,2,0],[19,6,2,0,"_servicesApi"],[19,18,2,0],[19,21,2,0,"require"],[19,28,2,0],[19,29,2,0,"_dependencyMap"],[19,43,2,0],[20,2,2,0],[20,6,2,0,"api"],[20,9,2,0],[20,12,2,0,"_interopDefault"],[20,27,2,0],[20,28,2,0,"_servicesApi"],[20,40,2,0],[21,2,25,7],[21,8,25,13,"useNegotiationStore"],[21,27,25,32],[21,30,25,35],[21,34,25,35,"create"],[21,42,25,41],[21,43,25,41,"create"],[21,49,25,41],[21,51,25,60],[21,52,25,61,"set"],[21,55,25,64],[21,57,25,66,"get"],[21,60,25,69],[21,66,25,75],[22,4,26,2,"currentNegotiation"],[22,22,26,20],[22,24,26,22],[22,28,26,26],[23,4,27,2,"offers"],[23,10,27,8],[23,12,27,10],[23,14,27,12],[24,4,28,2,"loading"],[24,11,28,9],[24,13,28,11],[24,18,28,16],[25,4,30,2,"createNegotiableTrip"],[25,24,30,22],[25,26,30,24],[25,32,30,24,"createNegotiableTrip"],[25,33,30,31,"userUid"],[25,40,30,38],[25,42,30,40,"userName"],[25,50,30,48],[25,52,30,50,"pickupLocation"],[25,66,30,64],[25,68,30,66,"destinationLocation"],[25,87,30,85],[25,89,30,87,"suggestedPrice"],[25,103,30,101],[25,108,30,106],[26,6,31,4,"set"],[26,9,31,7],[26,10,31,8],[27,8,31,10,"loading"],[27,15,31,17],[27,17,31,19],[28,6,31,24],[28,7,31,25],[28,8,31,26],[29,6,32,4],[29,10,32,8],[30,8,33,6,"console"],[30,15,33,13],[30,16,33,14,"log"],[30,19,33,17],[30,20,33,18],[30,52,33,50],[30,53,33,51],[31,8,34,6],[31,14,34,12,"response"],[31,22,34,20],[31,25,34,23],[31,31,34,29,"api"],[31,34,34,32],[31,35,34,32,"default"],[31,42,34,32],[31,43,34,33,"post"],[31,47,34,37],[31,48,34,38],[31,73,34,63],[31,75,34,65],[32,10,35,8,"user_uid"],[32,18,35,16],[32,20,35,18,"userUid"],[32,27,35,25],[33,10,36,8,"user_name"],[33,19,36,17],[33,21,36,19,"userName"],[33,29,36,27],[34,10,37,8,"pickup_location"],[34,25,37,23],[34,27,37,25],[35,12,38,10,"latitude"],[35,20,38,18],[35,22,38,20,"pickupLocation"],[35,36,38,34],[35,37,38,35,"latitude"],[35,45,38,43],[36,12,39,10,"longitude"],[36,21,39,19],[36,23,39,21,"pickupLocation"],[36,37,39,35],[36,38,39,36,"longitude"],[36,47,39,45],[37,12,40,10,"address"],[37,19,40,17],[37,21,40,19,"pickupLocation"],[37,35,40,33],[37,36,40,34,"address"],[38,10,41,8],[38,11,41,9],[39,10,42,8,"destination_location"],[39,30,42,28],[39,32,42,30],[40,12,43,10,"latitude"],[40,20,43,18],[40,22,43,20,"destinationLocation"],[40,41,43,39],[40,42,43,40,"latitude"],[40,50,43,48],[41,12,44,10,"longitude"],[41,21,44,19],[41,23,44,21,"destinationLocation"],[41,42,44,40],[41,43,44,41,"longitude"],[41,52,44,50],[42,12,45,10,"address"],[42,19,45,17],[42,21,45,19,"destinationLocation"],[42,40,45,38],[42,41,45,39,"address"],[43,10,46,8],[43,11,46,9],[44,10,47,8,"suggested_price"],[44,25,47,23],[44,27,47,25,"suggestedPrice"],[44,41,47,39],[45,10,48,8,"negotiable"],[45,20,48,18],[45,22,48,20],[46,8,49,6],[46,9,49,7],[46,10,49,8],[47,8,51,6],[47,12,51,10,"response"],[47,20,51,18],[47,21,51,19,"data"],[47,25,51,23],[47,26,51,24,"success"],[47,33,51,31],[47,35,51,33],[48,10,52,8,"console"],[48,17,52,15],[48,18,52,16,"log"],[48,21,52,19],[48,22,52,20],[48,50,52,48],[48,52,52,50,"response"],[48,60,52,58],[48,61,52,59,"data"],[48,65,52,63],[48,66,52,64,"trip_id"],[48,73,52,71],[48,74,52,72],[49,10,53,8,"set"],[49,13,53,11],[49,14,53,12],[50,12,53,14,"currentNegotiation"],[50,30,53,32],[50,32,53,34,"response"],[50,40,53,42],[50,41,53,43,"data"],[50,45,53,47],[51,12,53,49,"loading"],[51,19,53,56],[51,21,53,58],[52,10,53,64],[52,11,53,65],[52,12,53,66],[53,10,54,8],[53,17,54,15,"response"],[53,25,54,23],[53,26,54,24,"data"],[53,30,54,28],[54,8,55,6],[54,9,55,7],[54,15,55,13],[55,10,56,8],[55,16,56,14],[55,20,56,18,"Error"],[55,25,56,23],[55,26,56,24,"response"],[55,34,56,32],[55,35,56,33,"data"],[55,39,56,37],[55,40,56,38,"message"],[55,47,56,45],[55,51,56,49],[55,85,56,83],[55,86,56,84],[56,8,57,6],[57,6,58,4],[57,7,58,5],[57,8,58,6],[57,15,58,13,"error"],[57,20,58,23],[57,22,58,25],[58,8,59,6,"console"],[58,15,59,13],[58,16,59,14,"error"],[58,21,59,19],[58,22,59,20],[58,56,59,54],[58,58,59,56,"error"],[58,63,59,61],[58,64,59,62,"message"],[58,71,59,69],[58,72,59,70],[59,8,60,6,"set"],[59,11,60,9],[59,12,60,10],[60,10,60,12,"loading"],[60,17,60,19],[60,19,60,21],[61,8,60,27],[61,9,60,28],[61,10,60,29],[62,8,61,6],[62,14,61,12],[62,18,61,16,"Error"],[62,23,61,21],[62,24,61,22,"error"],[62,29,61,27],[62,30,61,28,"response"],[62,38,61,36],[62,40,61,38,"data"],[62,44,61,42],[62,46,61,44,"message"],[62,53,61,51],[62,57,61,55],[62,91,61,89],[62,92,61,90],[63,6,62,4],[64,4,63,2],[64,5,63,3],[65,4,65,2,"getOffers"],[65,13,65,11],[65,15,65,13],[65,21,65,20,"tripId"],[65,27,65,34],[65,31,65,39],[66,6,66,4],[66,10,66,8],[67,8,67,6,"console"],[67,15,67,13],[67,16,67,14,"log"],[67,19,67,17],[67,20,67,18],[67,43,67,41],[67,44,67,42],[68,8,68,6],[68,14,68,12,"response"],[68,22,68,20],[68,25,68,23],[68,31,68,29,"api"],[68,34,68,32],[68,35,68,32,"default"],[68,42,68,32],[68,43,68,33,"post"],[68,47,68,37],[68,48,68,38],[68,67,68,57],[68,69,68,59],[69,10,69,8,"trip_id"],[69,17,69,15],[69,19,69,17,"tripId"],[70,8,70,6],[70,9,70,7],[70,10,70,8],[71,8,72,6],[71,12,72,10,"response"],[71,20,72,18],[71,21,72,19,"data"],[71,25,72,23],[71,26,72,24,"success"],[71,33,72,31],[71,37,72,35,"response"],[71,45,72,43],[71,46,72,44,"data"],[71,50,72,48],[71,51,72,49,"offers"],[71,57,72,55],[71,59,72,57],[72,10,73,8,"console"],[72,17,73,15],[72,18,73,16,"log"],[72,21,73,19],[72,22,73,20],[72,34,73,32,"response"],[72,42,73,40],[72,43,73,41,"data"],[72,47,73,45],[72,48,73,46,"offers"],[72,54,73,52],[72,55,73,53,"length"],[72,61,73,59],[72,70,73,68],[72,71,73,69],[73,10,74,8,"set"],[73,13,74,11],[73,14,74,12],[74,12,74,14,"offers"],[74,18,74,20],[74,20,74,22,"response"],[74,28,74,30],[74,29,74,31,"data"],[74,33,74,35],[74,34,74,36,"offers"],[75,10,74,43],[75,11,74,44],[75,12,74,45],[76,8,75,6],[77,6,76,4],[77,7,76,5],[77,8,76,6],[77,15,76,13,"error"],[77,20,76,18],[77,22,76,20],[78,8,77,6,"console"],[78,15,77,13],[78,16,77,14,"error"],[78,21,77,19],[78,22,77,20],[78,47,77,45],[78,48,77,46],[79,6,78,4],[80,4,79,2],[80,5,79,3],[81,4,81,2,"acceptOffer"],[81,15,81,13],[81,17,81,15],[81,23,81,15,"acceptOffer"],[81,24,81,22,"tripId"],[81,30,81,36],[81,32,81,38,"offerId"],[81,39,81,53],[81,44,81,58],[82,6,82,4],[82,10,82,8],[83,8,83,6,"console"],[83,15,83,13],[83,16,83,14,"log"],[83,19,83,17],[83,20,83,18],[83,42,83,40],[83,43,83,41],[84,8,84,6],[84,14,84,12,"response"],[84,22,84,20],[84,25,84,23],[84,31,84,29,"api"],[84,34,84,32],[84,35,84,32,"default"],[84,42,84,32],[84,43,84,33,"post"],[84,47,84,37],[84,48,84,38],[84,68,84,58],[84,70,84,60],[85,10,85,8,"trip_id"],[85,17,85,15],[85,19,85,17,"tripId"],[85,25,85,23],[86,10,86,8,"offer_id"],[86,18,86,16],[86,20,86,18,"offerId"],[87,8,87,6],[87,9,87,7],[87,10,87,8],[88,8,89,6],[88,12,89,10,"response"],[88,20,89,18],[88,21,89,19,"data"],[88,25,89,23],[88,26,89,24,"success"],[88,33,89,31],[88,35,89,33],[89,10,90,8,"console"],[89,17,90,15],[89,18,90,16,"log"],[89,21,90,19],[89,22,90,20],[89,41,90,39],[89,42,90,40],[90,10,91,8,"set"],[90,13,91,11],[90,14,91,12],[91,12,91,14,"currentNegotiation"],[91,30,91,32],[91,32,91,34],[91,36,91,38],[92,12,91,40,"offers"],[92,18,91,46],[92,20,91,48],[93,10,91,51],[93,11,91,52],[93,12,91,53],[94,8,92,6],[95,6,93,4],[95,7,93,5],[95,8,93,6],[95,15,93,13,"error"],[95,20,93,23],[95,22,93,25],[96,8,94,6],[96,14,94,12],[96,18,94,16,"Error"],[96,23,94,21],[96,24,94,22,"error"],[96,29,94,27],[96,30,94,28,"response"],[96,38,94,36],[96,40,94,38,"data"],[96,44,94,42],[96,46,94,44,"message"],[96,53,94,51],[96,57,94,55],[96,81,94,79],[96,82,94,80],[97,6,95,4],[98,4,96,2],[98,5,96,3],[99,4,98,2,"rejectOffer"],[99,15,98,13],[99,17,98,15],[99,23,98,22,"offerId"],[99,30,98,37],[99,34,98,42],[100,6,99,4],[100,10,99,8],[101,8,100,6,"console"],[101,15,100,13],[101,16,100,14,"log"],[101,19,100,17],[101,20,100,18],[101,42,100,40],[101,43,100,41],[102,8,101,6],[102,14,101,12,"api"],[102,17,101,15],[102,18,101,15,"default"],[102,25,101,15],[102,26,101,16,"post"],[102,30,101,20],[102,31,101,21],[102,51,101,41],[102,53,101,43],[103,10,102,8,"offer_id"],[103,18,102,16],[103,20,102,18,"offerId"],[104,8,103,6],[104,9,103,7],[104,10,103,8],[106,8,105,6],[107,8,106,6,"set"],[107,11,106,9],[107,12,106,10,"state"],[107,17,106,15],[107,22,106,20],[108,10,107,8,"offers"],[108,16,107,14],[108,18,107,16,"state"],[108,23,107,21],[108,24,107,22,"offers"],[108,30,107,28],[108,31,107,29,"filter"],[108,37,107,35],[108,38,107,36,"o"],[108,39,107,37],[108,43,107,41,"o"],[108,44,107,42],[108,45,107,43,"offer_id"],[108,53,107,51],[108,58,107,56,"offerId"],[108,65,107,63],[109,8,108,6],[109,9,108,7],[109,10,108,8],[109,11,108,9],[110,6,109,4],[110,7,109,5],[110,8,109,6],[110,15,109,13,"error"],[110,20,109,23],[110,22,109,25],[111,8,110,6],[111,14,110,12],[111,18,110,16,"Error"],[111,23,110,21],[111,24,110,22,"error"],[111,29,110,27],[111,30,110,28,"response"],[111,38,110,36],[111,40,110,38,"data"],[111,44,110,42],[111,46,110,44,"message"],[111,53,110,51],[111,57,110,55],[111,81,110,79],[111,82,110,80],[112,6,111,4],[113,4,112,2],[114,2,113,0],[114,3,113,1],[114,4,113,2],[114,5,113,3],[115,0,113,4],[115,3]],"functionMap":{"names":["<global>","create$argument_0","createNegotiableTrip","getOffers","acceptOffer","rejectOffer","set$argument_0","state.offers.filter$argument_0"],"mappings":"AAA;4DCwB;wBCK;GDiC;aEE;GFc;eGE;GHe;eIE;UCQ;oCCC,2BD;QDC;GJI;EDC"},"hasCjsExports":false},"type":"js/module"}]}