{"dependencies":[{"name":"zustand","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"POPvx7yS3Y3wz+S/9OAefiXNs0Q=","exportNames":["*"],"imports":1}},{"name":"@react-native-async-storage/async-storage","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":34},"end":{"line":2,"column":69,"index":103}}],"key":"0kSRlooyBOaYM9tlTtK91nq+uds=","exportNames":["*"],"imports":1}},{"name":"../services/api","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":104},"end":{"line":3,"column":34,"index":138}}],"key":"Pr5/EB33W7mJGi+ygccy+pUf1E8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useAuthStore\", {\n    enumerable: true,\n    get: function () {\n      return useAuthStore;\n    }\n  });\n  var _zustand = require(_dependencyMap[0], \"zustand\");\n  var _reactNativeAsyncStorageAsyncStorage = require(_dependencyMap[1], \"@react-native-async-storage/async-storage\");\n  var AsyncStorage = _interopDefault(_reactNativeAsyncStorageAsyncStorage);\n  var _servicesApi = require(_dependencyMap[2], \"../services/api\");\n  var api = _interopDefault(_servicesApi);\n  const useAuthStore = (0, _zustand.create)((set, get) => ({\n    user: null,\n    token: null,\n    loading: false,\n    isAuthenticated: false,\n    login: async (emailOrPhone, password) => {\n      set({\n        loading: true\n      });\n      try {\n        console.log('üîê Attempting login with joltcab.com...');\n\n        // Detectar si es email o tel√©fono\n        const isEmail = emailOrPhone.includes('@');\n        const loginData = {\n          email: isEmail ? emailOrPhone : '',\n          phone: isEmail ? '' : emailOrPhone,\n          password,\n          device_type: 'web',\n          login_by: 'manual'\n        };\n        console.log('üìß Login type:', isEmail ? 'Email' : 'Phone');\n        const response = await api.default.post('/userslogin', loginData);\n        if (response.data.success) {\n          const {\n            token,\n            user_id,\n            first_name,\n            last_name,\n            email,\n            phone,\n            wallet,\n            picture\n          } = response.data;\n          const user = {\n            uid: user_id,\n            // Add uid for compatibility\n            user_id,\n            first_name,\n            last_name,\n            email,\n            phone,\n            wallet: wallet || 0,\n            picture,\n            token\n          };\n          console.log('‚úÖ Login successful:', user.email, 'User ID:', user.user_id);\n          await AsyncStorage.default.setItem('token', token);\n          await AsyncStorage.default.setItem('user', JSON.stringify(user));\n          set({\n            user,\n            token,\n            isAuthenticated: true,\n            loading: false\n          });\n        } else {\n          throw new Error('Login failed');\n        }\n      } catch (error) {\n        console.error('‚ùå Login failed:', error.response?.data?.message || error.message);\n        set({\n          loading: false\n        });\n        throw new Error(error.response?.data?.message || 'Login failed');\n      }\n    },\n    register: async (firstName, lastName, email, phone, password, countryCode = '+1', country = 'United States') => {\n      set({\n        loading: true\n      });\n      try {\n        console.log('üìù Attempting registration with joltcab.com...');\n        const registerData = {\n          first_name: firstName,\n          last_name: lastName,\n          email,\n          phone,\n          country_phone_code: countryCode,\n          country,\n          password,\n          login_by: 'manual',\n          device_type: 'web'\n        };\n        const response = await api.default.post('/userregister', registerData);\n        if (response.data.success) {\n          const {\n            token,\n            user_id,\n            first_name,\n            last_name,\n            email,\n            phone,\n            wallet,\n            picture\n          } = response.data;\n          const user = {\n            uid: user_id,\n            // Add uid for compatibility\n            user_id,\n            first_name,\n            last_name,\n            email,\n            phone: phone || '',\n            wallet: wallet || 0,\n            picture,\n            token,\n            country_phone_code: countryCode,\n            country\n          };\n          console.log('‚úÖ Registration successful:', user.email, 'User ID:', user.user_id);\n          await AsyncStorage.default.setItem('token', token);\n          await AsyncStorage.default.setItem('user', JSON.stringify(user));\n          set({\n            user,\n            token,\n            isAuthenticated: true,\n            loading: false\n          });\n        } else {\n          throw new Error('Registration failed');\n        }\n      } catch (error) {\n        console.error('‚ùå Registration failed:', error.response?.data?.message || error.message);\n        set({\n          loading: false\n        });\n        throw new Error(error.response?.data?.message || 'Registration failed');\n      }\n    },\n    logout: async () => {\n      await AsyncStorage.default.removeItem('token');\n      await AsyncStorage.default.removeItem('user');\n      set({\n        user: null,\n        token: null,\n        isAuthenticated: false\n      });\n    },\n    loadUser: async () => {\n      set({\n        loading: true\n      });\n      try {\n        const token = await AsyncStorage.default.getItem('token');\n        const userStr = await AsyncStorage.default.getItem('user');\n        if (token && userStr) {\n          const user = JSON.parse(userStr);\n          console.log('‚úÖ User loaded from storage:', user.email);\n          set({\n            user,\n            token,\n            isAuthenticated: true,\n            loading: false\n          });\n        } else {\n          set({\n            loading: false\n          });\n        }\n      } catch (error) {\n        console.error('‚ùå Failed to load user');\n        await get().logout();\n        set({\n          loading: false\n        });\n      }\n    },\n    updateProfile: async data => {\n      try {\n        console.log('üìù Updating profile...');\n        // TODO: Implement profile update endpoint when available\n        const currentUser = get().user;\n        if (currentUser) {\n          const updatedUser = Object.assign({}, currentUser, data);\n          await AsyncStorage.default.setItem('user', JSON.stringify(updatedUser));\n          set({\n            user: updatedUser\n          });\n          console.log('‚úÖ Profile updated locally');\n        }\n      } catch (error) {\n        console.error('‚ùå Profile update failed:', error.message);\n        throw new Error('Update failed');\n      }\n    }\n  }));\n});","lineCount":209,"map":[[12,2,18,0,"Object"],[12,8,18,0],[12,9,18,0,"defineProperty"],[12,23,18,0],[12,24,18,0,"exports"],[12,31,18,0],[13,4,18,0,"enumerable"],[13,14,18,0],[14,4,18,0,"get"],[14,7,18,0],[14,18,18,0,"get"],[14,19,18,0],[15,6,18,0],[15,13,18,0,"useAuthStore"],[15,25,18,0],[16,4,18,0],[17,2,18,0],[18,2,1,0],[18,6,1,0,"_zustand"],[18,14,1,0],[18,17,1,0,"require"],[18,24,1,0],[18,25,1,0,"_dependencyMap"],[18,39,1,0],[19,2,2,0],[19,6,2,0,"_reactNativeAsyncStorageAsyncStorage"],[19,42,2,0],[19,45,2,0,"require"],[19,52,2,0],[19,53,2,0,"_dependencyMap"],[19,67,2,0],[20,2,2,0],[20,6,2,0,"AsyncStorage"],[20,18,2,0],[20,21,2,0,"_interopDefault"],[20,36,2,0],[20,37,2,0,"_reactNativeAsyncStorageAsyncStorage"],[20,73,2,0],[21,2,3,0],[21,6,3,0,"_servicesApi"],[21,18,3,0],[21,21,3,0,"require"],[21,28,3,0],[21,29,3,0,"_dependencyMap"],[21,43,3,0],[22,2,3,0],[22,6,3,0,"api"],[22,9,3,0],[22,12,3,0,"_interopDefault"],[22,27,3,0],[22,28,3,0,"_servicesApi"],[22,40,3,0],[23,2,18,7],[23,8,18,13,"useAuthStore"],[23,20,18,25],[23,23,18,28],[23,27,18,28,"create"],[23,35,18,34],[23,36,18,34,"create"],[23,42,18,34],[23,44,18,46],[23,45,18,47,"set"],[23,48,18,50],[23,50,18,52,"get"],[23,53,18,55],[23,59,18,61],[24,4,19,2,"user"],[24,8,19,6],[24,10,19,8],[24,14,19,12],[25,4,20,2,"token"],[25,9,20,7],[25,11,20,9],[25,15,20,13],[26,4,21,2,"loading"],[26,11,21,9],[26,13,21,11],[26,18,21,16],[27,4,22,2,"isAuthenticated"],[27,19,22,17],[27,21,22,19],[27,26,22,24],[28,4,24,2,"login"],[28,9,24,7],[28,11,24,9],[28,17,24,9,"login"],[28,18,24,16,"emailOrPhone"],[28,30,24,36],[28,32,24,38,"password"],[28,40,24,54],[28,45,24,59],[29,6,25,4,"set"],[29,9,25,7],[29,10,25,8],[30,8,25,10,"loading"],[30,15,25,17],[30,17,25,19],[31,6,25,24],[31,7,25,25],[31,8,25,26],[32,6,26,4],[32,10,26,8],[33,8,27,6,"console"],[33,15,27,13],[33,16,27,14,"log"],[33,19,27,17],[33,20,27,18],[33,61,27,59],[33,62,27,60],[35,8,29,6],[36,8,30,6],[36,14,30,12,"isEmail"],[36,21,30,19],[36,24,30,22,"emailOrPhone"],[36,36,30,34],[36,37,30,35,"includes"],[36,45,30,43],[36,46,30,44],[36,49,30,47],[36,50,30,48],[37,8,31,6],[37,14,31,12,"loginData"],[37,23,31,21],[37,26,31,24],[38,10,32,8,"email"],[38,15,32,13],[38,17,32,15,"isEmail"],[38,24,32,22],[38,27,32,25,"emailOrPhone"],[38,39,32,37],[38,42,32,40],[38,44,32,42],[39,10,33,8,"phone"],[39,15,33,13],[39,17,33,15,"isEmail"],[39,24,33,22],[39,27,33,25],[39,29,33,27],[39,32,33,30,"emailOrPhone"],[39,44,33,42],[40,10,34,8,"password"],[40,18,34,16],[41,10,35,8,"device_type"],[41,21,35,19],[41,23,35,21],[41,28,35,26],[42,10,36,8,"login_by"],[42,18,36,16],[42,20,36,18],[43,8,37,6],[43,9,37,7],[44,8,39,6,"console"],[44,15,39,13],[44,16,39,14,"log"],[44,19,39,17],[44,20,39,18],[44,36,39,34],[44,38,39,36,"isEmail"],[44,45,39,43],[44,48,39,46],[44,55,39,53],[44,58,39,56],[44,65,39,63],[44,66,39,64],[45,8,41,6],[45,14,41,12,"response"],[45,22,41,20],[45,25,41,23],[45,31,41,29,"api"],[45,34,41,32],[45,35,41,32,"default"],[45,42,41,32],[45,43,41,33,"post"],[45,47,41,37],[45,48,41,38],[45,61,41,51],[45,63,41,53,"loginData"],[45,72,41,62],[45,73,41,63],[46,8,43,6],[46,12,43,10,"response"],[46,20,43,18],[46,21,43,19,"data"],[46,25,43,23],[46,26,43,24,"success"],[46,33,43,31],[46,35,43,33],[47,10,44,8],[47,16,44,14],[48,12,44,16,"token"],[48,17,44,21],[49,12,44,23,"user_id"],[49,19,44,30],[50,12,44,32,"first_name"],[50,22,44,42],[51,12,44,44,"last_name"],[51,21,44,53],[52,12,44,55,"email"],[52,17,44,60],[53,12,44,62,"phone"],[53,17,44,67],[54,12,44,69,"wallet"],[54,18,44,75],[55,12,44,77,"picture"],[56,10,44,85],[56,11,44,86],[56,14,44,89,"response"],[56,22,44,97],[56,23,44,98,"data"],[56,27,44,102],[57,10,46,8],[57,16,46,14,"user"],[57,20,46,24],[57,23,46,27],[58,12,47,10,"uid"],[58,15,47,13],[58,17,47,15,"user_id"],[58,24,47,22],[59,12,47,24],[60,12,48,10,"user_id"],[60,19,48,17],[61,12,49,10,"first_name"],[61,22,49,20],[62,12,50,10,"last_name"],[62,21,50,19],[63,12,51,10,"email"],[63,17,51,15],[64,12,52,10,"phone"],[64,17,52,15],[65,12,53,10,"wallet"],[65,18,53,16],[65,20,53,18,"wallet"],[65,26,53,24],[65,30,53,28],[65,31,53,29],[66,12,54,10,"picture"],[66,19,54,17],[67,12,55,10,"token"],[68,10,56,8],[68,11,56,9],[69,10,58,8,"console"],[69,17,58,15],[69,18,58,16,"log"],[69,21,58,19],[69,22,58,20],[69,43,58,41],[69,45,58,43,"user"],[69,49,58,47],[69,50,58,48,"email"],[69,55,58,53],[69,57,58,55],[69,67,58,65],[69,69,58,67,"user"],[69,73,58,71],[69,74,58,72,"user_id"],[69,81,58,79],[69,82,58,80],[70,10,59,8],[70,16,59,14,"AsyncStorage"],[70,28,59,26],[70,29,59,26,"default"],[70,36,59,26],[70,37,59,27,"setItem"],[70,44,59,34],[70,45,59,35],[70,52,59,42],[70,54,59,44,"token"],[70,59,59,49],[70,60,59,50],[71,10,60,8],[71,16,60,14,"AsyncStorage"],[71,28,60,26],[71,29,60,26,"default"],[71,36,60,26],[71,37,60,27,"setItem"],[71,44,60,34],[71,45,60,35],[71,51,60,41],[71,53,60,43,"JSON"],[71,57,60,47],[71,58,60,48,"stringify"],[71,67,60,57],[71,68,60,58,"user"],[71,72,60,62],[71,73,60,63],[71,74,60,64],[72,10,62,8,"set"],[72,13,62,11],[72,14,62,12],[73,12,62,14,"user"],[73,16,62,18],[74,12,62,20,"token"],[74,17,62,25],[75,12,62,27,"isAuthenticated"],[75,27,62,42],[75,29,62,44],[75,33,62,48],[76,12,62,50,"loading"],[76,19,62,57],[76,21,62,59],[77,10,62,65],[77,11,62,66],[77,12,62,67],[78,8,63,6],[78,9,63,7],[78,15,63,13],[79,10,64,8],[79,16,64,14],[79,20,64,18,"Error"],[79,25,64,23],[79,26,64,24],[79,40,64,38],[79,41,64,39],[80,8,65,6],[81,6,66,4],[81,7,66,5],[81,8,66,6],[81,15,66,13,"error"],[81,20,66,23],[81,22,66,25],[82,8,67,6,"console"],[82,15,67,13],[82,16,67,14,"error"],[82,21,67,19],[82,22,67,20],[82,39,67,37],[82,41,67,39,"error"],[82,46,67,44],[82,47,67,45,"response"],[82,55,67,53],[82,57,67,55,"data"],[82,61,67,59],[82,63,67,61,"message"],[82,70,67,68],[82,74,67,72,"error"],[82,79,67,77],[82,80,67,78,"message"],[82,87,67,85],[82,88,67,86],[83,8,68,6,"set"],[83,11,68,9],[83,12,68,10],[84,10,68,12,"loading"],[84,17,68,19],[84,19,68,21],[85,8,68,27],[85,9,68,28],[85,10,68,29],[86,8,69,6],[86,14,69,12],[86,18,69,16,"Error"],[86,23,69,21],[86,24,69,22,"error"],[86,29,69,27],[86,30,69,28,"response"],[86,38,69,36],[86,40,69,38,"data"],[86,44,69,42],[86,46,69,44,"message"],[86,53,69,51],[86,57,69,55],[86,71,69,69],[86,72,69,70],[87,6,70,4],[88,4,71,2],[88,5,71,3],[89,4,73,2,"register"],[89,12,73,10],[89,14,73,12],[89,20,73,12,"register"],[89,21,73,19,"firstName"],[89,30,73,36],[89,32,73,38,"lastName"],[89,40,73,54],[89,42,73,56,"email"],[89,47,73,69],[89,49,73,71,"phone"],[89,54,73,84],[89,56,73,86,"password"],[89,64,73,102],[89,66,73,104,"countryCode"],[89,77,73,123],[89,80,73,126],[89,84,73,130],[89,86,73,132,"country"],[89,93,73,147],[89,96,73,150],[89,111,73,165],[89,116,73,170],[90,6,74,4,"set"],[90,9,74,7],[90,10,74,8],[91,8,74,10,"loading"],[91,15,74,17],[91,17,74,19],[92,6,74,24],[92,7,74,25],[92,8,74,26],[93,6,75,4],[93,10,75,8],[94,8,76,6,"console"],[94,15,76,13],[94,16,76,14,"log"],[94,19,76,17],[94,20,76,18],[94,68,76,66],[94,69,76,67],[95,8,78,6],[95,14,78,12,"registerData"],[95,26,78,24],[95,29,78,27],[96,10,79,8,"first_name"],[96,20,79,18],[96,22,79,20,"firstName"],[96,31,79,29],[97,10,80,8,"last_name"],[97,19,80,17],[97,21,80,19,"lastName"],[97,29,80,27],[98,10,81,8,"email"],[98,15,81,13],[99,10,82,8,"phone"],[99,15,82,13],[100,10,83,8,"country_phone_code"],[100,28,83,26],[100,30,83,28,"countryCode"],[100,41,83,39],[101,10,84,8,"country"],[101,17,84,15],[102,10,85,8,"password"],[102,18,85,16],[103,10,86,8,"login_by"],[103,18,86,16],[103,20,86,18],[103,28,86,26],[104,10,87,8,"device_type"],[104,21,87,19],[104,23,87,21],[105,8,88,6],[105,9,88,7],[106,8,90,6],[106,14,90,12,"response"],[106,22,90,20],[106,25,90,23],[106,31,90,29,"api"],[106,34,90,32],[106,35,90,32,"default"],[106,42,90,32],[106,43,90,33,"post"],[106,47,90,37],[106,48,90,38],[106,63,90,53],[106,65,90,55,"registerData"],[106,77,90,67],[106,78,90,68],[107,8,92,6],[107,12,92,10,"response"],[107,20,92,18],[107,21,92,19,"data"],[107,25,92,23],[107,26,92,24,"success"],[107,33,92,31],[107,35,92,33],[108,10,93,8],[108,16,93,14],[109,12,93,16,"token"],[109,17,93,21],[110,12,93,23,"user_id"],[110,19,93,30],[111,12,93,32,"first_name"],[111,22,93,42],[112,12,93,44,"last_name"],[112,21,93,53],[113,12,93,55,"email"],[113,17,93,60],[114,12,93,62,"phone"],[114,17,93,67],[115,12,93,69,"wallet"],[115,18,93,75],[116,12,93,77,"picture"],[117,10,93,85],[117,11,93,86],[117,14,93,89,"response"],[117,22,93,97],[117,23,93,98,"data"],[117,27,93,102],[118,10,95,8],[118,16,95,14,"user"],[118,20,95,24],[118,23,95,27],[119,12,96,10,"uid"],[119,15,96,13],[119,17,96,15,"user_id"],[119,24,96,22],[120,12,96,24],[121,12,97,10,"user_id"],[121,19,97,17],[122,12,98,10,"first_name"],[122,22,98,20],[123,12,99,10,"last_name"],[123,21,99,19],[124,12,100,10,"email"],[124,17,100,15],[125,12,101,10,"phone"],[125,17,101,15],[125,19,101,17,"phone"],[125,24,101,22],[125,28,101,26],[125,30,101,28],[126,12,102,10,"wallet"],[126,18,102,16],[126,20,102,18,"wallet"],[126,26,102,24],[126,30,102,28],[126,31,102,29],[127,12,103,10,"picture"],[127,19,103,17],[128,12,104,10,"token"],[128,17,104,15],[129,12,105,10,"country_phone_code"],[129,30,105,28],[129,32,105,30,"countryCode"],[129,43,105,41],[130,12,106,10,"country"],[131,10,107,8],[131,11,107,9],[132,10,109,8,"console"],[132,17,109,15],[132,18,109,16,"log"],[132,21,109,19],[132,22,109,20],[132,50,109,48],[132,52,109,50,"user"],[132,56,109,54],[132,57,109,55,"email"],[132,62,109,60],[132,64,109,62],[132,74,109,72],[132,76,109,74,"user"],[132,80,109,78],[132,81,109,79,"user_id"],[132,88,109,86],[132,89,109,87],[133,10,110,8],[133,16,110,14,"AsyncStorage"],[133,28,110,26],[133,29,110,26,"default"],[133,36,110,26],[133,37,110,27,"setItem"],[133,44,110,34],[133,45,110,35],[133,52,110,42],[133,54,110,44,"token"],[133,59,110,49],[133,60,110,50],[134,10,111,8],[134,16,111,14,"AsyncStorage"],[134,28,111,26],[134,29,111,26,"default"],[134,36,111,26],[134,37,111,27,"setItem"],[134,44,111,34],[134,45,111,35],[134,51,111,41],[134,53,111,43,"JSON"],[134,57,111,47],[134,58,111,48,"stringify"],[134,67,111,57],[134,68,111,58,"user"],[134,72,111,62],[134,73,111,63],[134,74,111,64],[135,10,113,8,"set"],[135,13,113,11],[135,14,113,12],[136,12,113,14,"user"],[136,16,113,18],[137,12,113,20,"token"],[137,17,113,25],[138,12,113,27,"isAuthenticated"],[138,27,113,42],[138,29,113,44],[138,33,113,48],[139,12,113,50,"loading"],[139,19,113,57],[139,21,113,59],[140,10,113,65],[140,11,113,66],[140,12,113,67],[141,8,114,6],[141,9,114,7],[141,15,114,13],[142,10,115,8],[142,16,115,14],[142,20,115,18,"Error"],[142,25,115,23],[142,26,115,24],[142,47,115,45],[142,48,115,46],[143,8,116,6],[144,6,117,4],[144,7,117,5],[144,8,117,6],[144,15,117,13,"error"],[144,20,117,23],[144,22,117,25],[145,8,118,6,"console"],[145,15,118,13],[145,16,118,14,"error"],[145,21,118,19],[145,22,118,20],[145,46,118,44],[145,48,118,46,"error"],[145,53,118,51],[145,54,118,52,"response"],[145,62,118,60],[145,64,118,62,"data"],[145,68,118,66],[145,70,118,68,"message"],[145,77,118,75],[145,81,118,79,"error"],[145,86,118,84],[145,87,118,85,"message"],[145,94,118,92],[145,95,118,93],[146,8,119,6,"set"],[146,11,119,9],[146,12,119,10],[147,10,119,12,"loading"],[147,17,119,19],[147,19,119,21],[148,8,119,27],[148,9,119,28],[148,10,119,29],[149,8,120,6],[149,14,120,12],[149,18,120,16,"Error"],[149,23,120,21],[149,24,120,22,"error"],[149,29,120,27],[149,30,120,28,"response"],[149,38,120,36],[149,40,120,38,"data"],[149,44,120,42],[149,46,120,44,"message"],[149,53,120,51],[149,57,120,55],[149,78,120,76],[149,79,120,77],[150,6,121,4],[151,4,122,2],[151,5,122,3],[152,4,124,2,"logout"],[152,10,124,8],[152,12,124,10],[152,18,124,10,"logout"],[152,19,124,10],[152,24,124,22],[153,6,125,4],[153,12,125,10,"AsyncStorage"],[153,24,125,22],[153,25,125,22,"default"],[153,32,125,22],[153,33,125,23,"removeItem"],[153,43,125,33],[153,44,125,34],[153,51,125,41],[153,52,125,42],[154,6,126,4],[154,12,126,10,"AsyncStorage"],[154,24,126,22],[154,25,126,22,"default"],[154,32,126,22],[154,33,126,23,"removeItem"],[154,43,126,33],[154,44,126,34],[154,50,126,40],[154,51,126,41],[155,6,127,4,"set"],[155,9,127,7],[155,10,127,8],[156,8,127,10,"user"],[156,12,127,14],[156,14,127,16],[156,18,127,20],[157,8,127,22,"token"],[157,13,127,27],[157,15,127,29],[157,19,127,33],[158,8,127,35,"isAuthenticated"],[158,23,127,50],[158,25,127,52],[159,6,127,58],[159,7,127,59],[159,8,127,60],[160,4,128,2],[160,5,128,3],[161,4,130,2,"loadUser"],[161,12,130,10],[161,14,130,12],[161,20,130,12,"loadUser"],[161,21,130,12],[161,26,130,24],[162,6,131,4,"set"],[162,9,131,7],[162,10,131,8],[163,8,131,10,"loading"],[163,15,131,17],[163,17,131,19],[164,6,131,24],[164,7,131,25],[164,8,131,26],[165,6,132,4],[165,10,132,8],[166,8,133,6],[166,14,133,12,"token"],[166,19,133,17],[166,22,133,20],[166,28,133,26,"AsyncStorage"],[166,40,133,38],[166,41,133,38,"default"],[166,48,133,38],[166,49,133,39,"getItem"],[166,56,133,46],[166,57,133,47],[166,64,133,54],[166,65,133,55],[167,8,134,6],[167,14,134,12,"userStr"],[167,21,134,19],[167,24,134,22],[167,30,134,28,"AsyncStorage"],[167,42,134,40],[167,43,134,40,"default"],[167,50,134,40],[167,51,134,41,"getItem"],[167,58,134,48],[167,59,134,49],[167,65,134,55],[167,66,134,56],[168,8,136,6],[168,12,136,10,"token"],[168,17,136,15],[168,21,136,19,"userStr"],[168,28,136,26],[168,30,136,28],[169,10,137,8],[169,16,137,14,"user"],[169,20,137,18],[169,23,137,21,"JSON"],[169,27,137,25],[169,28,137,26,"parse"],[169,33,137,31],[169,34,137,32,"userStr"],[169,41,137,39],[169,42,137,40],[170,10,138,8,"console"],[170,17,138,15],[170,18,138,16,"log"],[170,21,138,19],[170,22,138,20],[170,51,138,49],[170,53,138,51,"user"],[170,57,138,55],[170,58,138,56,"email"],[170,63,138,61],[170,64,138,62],[171,10,139,8,"set"],[171,13,139,11],[171,14,139,12],[172,12,139,14,"user"],[172,16,139,18],[173,12,139,20,"token"],[173,17,139,25],[174,12,139,27,"isAuthenticated"],[174,27,139,42],[174,29,139,44],[174,33,139,48],[175,12,139,50,"loading"],[175,19,139,57],[175,21,139,59],[176,10,139,65],[176,11,139,66],[176,12,139,67],[177,8,140,6],[177,9,140,7],[177,15,140,13],[178,10,141,8,"set"],[178,13,141,11],[178,14,141,12],[179,12,141,14,"loading"],[179,19,141,21],[179,21,141,23],[180,10,141,29],[180,11,141,30],[180,12,141,31],[181,8,142,6],[182,6,143,4],[182,7,143,5],[182,8,143,6],[182,15,143,13,"error"],[182,20,143,18],[182,22,143,20],[183,8,144,6,"console"],[183,15,144,13],[183,16,144,14,"error"],[183,21,144,19],[183,22,144,20],[183,45,144,43],[183,46,144,44],[184,8,145,6],[184,14,145,12,"get"],[184,17,145,15],[184,18,145,16],[184,19,145,17],[184,20,145,18,"logout"],[184,26,145,24],[184,27,145,25],[184,28,145,26],[185,8,146,6,"set"],[185,11,146,9],[185,12,146,10],[186,10,146,12,"loading"],[186,17,146,19],[186,19,146,21],[187,8,146,27],[187,9,146,28],[187,10,146,29],[188,6,147,4],[189,4,148,2],[189,5,148,3],[190,4,150,2,"updateProfile"],[190,17,150,15],[190,19,150,17],[190,25,150,24,"data"],[190,29,150,43],[190,33,150,48],[191,6,151,4],[191,10,151,8],[192,8,152,6,"console"],[192,15,152,13],[192,16,152,14,"log"],[192,19,152,17],[192,20,152,18],[192,44,152,42],[192,45,152,43],[193,8,153,6],[194,8,154,6],[194,14,154,12,"currentUser"],[194,25,154,23],[194,28,154,26,"get"],[194,31,154,29],[194,32,154,30],[194,33,154,31],[194,34,154,32,"user"],[194,38,154,36],[195,8,155,6],[195,12,155,10,"currentUser"],[195,23,155,21],[195,25,155,23],[196,10,156,8],[196,16,156,14,"updatedUser"],[196,27,156,25],[196,30,156,25,"Object"],[196,36,156,25],[196,37,156,25,"assign"],[196,43,156,25],[196,48,156,33,"currentUser"],[196,59,156,44],[196,61,156,49,"data"],[196,65,156,53],[196,66,156,55],[197,10,157,8],[197,16,157,14,"AsyncStorage"],[197,28,157,26],[197,29,157,26,"default"],[197,36,157,26],[197,37,157,27,"setItem"],[197,44,157,34],[197,45,157,35],[197,51,157,41],[197,53,157,43,"JSON"],[197,57,157,47],[197,58,157,48,"stringify"],[197,67,157,57],[197,68,157,58,"updatedUser"],[197,79,157,69],[197,80,157,70],[197,81,157,71],[198,10,158,8,"set"],[198,13,158,11],[198,14,158,12],[199,12,158,14,"user"],[199,16,158,18],[199,18,158,20,"updatedUser"],[200,10,158,32],[200,11,158,33],[200,12,158,34],[201,10,159,8,"console"],[201,17,159,15],[201,18,159,16,"log"],[201,21,159,19],[201,22,159,20],[201,49,159,47],[201,50,159,48],[202,8,160,6],[203,6,161,4],[203,7,161,5],[203,8,161,6],[203,15,161,13,"error"],[203,20,161,23],[203,22,161,25],[204,8,162,6,"console"],[204,15,162,13],[204,16,162,14,"error"],[204,21,162,19],[204,22,162,20],[204,48,162,46],[204,50,162,48,"error"],[204,55,162,53],[204,56,162,54,"message"],[204,63,162,61],[204,64,162,62],[205,8,163,6],[205,14,163,12],[205,18,163,16,"Error"],[205,23,163,21],[205,24,163,22],[205,39,163,37],[205,40,163,38],[206,6,164,4],[207,4,165,2],[208,2,166,0],[208,3,166,1],[208,4,166,2],[208,5,166,3],[209,0,166,4],[209,3]],"functionMap":{"names":["<global>","create$argument_0","login","register","logout","loadUser","updateProfile"],"mappings":"AAA;8CCiB;SCM;GD+C;YEE;GFiD;UGE;GHI;YIE;GJkB;iBKE;GLe;EDC"},"hasCjsExports":false},"type":"js/module"}]}