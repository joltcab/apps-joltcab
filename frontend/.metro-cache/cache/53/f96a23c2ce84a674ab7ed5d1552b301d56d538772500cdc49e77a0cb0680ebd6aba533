{"dependencies":[{"name":"zustand","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":33,"index":33}}],"key":"POPvx7yS3Y3wz+S/9OAefiXNs0Q=","exportNames":["*"],"imports":1}},{"name":"../services/api","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":34},"end":{"line":2,"column":34,"index":68}}],"key":"Pr5/EB33W7mJGi+ygccy+pUf1E8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"useStatsStore\", {\n    enumerable: true,\n    get: function () {\n      return useStatsStore;\n    }\n  });\n  var _zustand = require(_dependencyMap[0], \"zustand\");\n  var _servicesApi = require(_dependencyMap[1], \"../services/api\");\n  var api = _interopDefault(_servicesApi);\n  const useStatsStore = (0, _zustand.create)(set => ({\n    stats: null,\n    loading: false,\n    fetchStats: async userUid => {\n      set({\n        loading: true\n      });\n      try {\n        console.log('üìä Fetching user stats...');\n        const response = await api.default.post('/user/stats', {\n          user_uid: userUid\n        });\n        if (response.data.success && response.data.stats) {\n          console.log('‚úÖ Stats loaded:', response.data.stats);\n          set({\n            stats: response.data.stats,\n            loading: false\n          });\n        } else {\n          set({\n            loading: false\n          });\n        }\n      } catch (error) {\n        console.error('‚ùå Failed to load stats');\n        set({\n          loading: false\n        });\n      }\n    }\n  }));\n});","lineCount":52,"map":[[12,2,19,0,"Object"],[12,8,19,0],[12,9,19,0,"defineProperty"],[12,23,19,0],[12,24,19,0,"exports"],[12,31,19,0],[13,4,19,0,"enumerable"],[13,14,19,0],[14,4,19,0,"get"],[14,7,19,0],[14,18,19,0,"get"],[14,19,19,0],[15,6,19,0],[15,13,19,0,"useStatsStore"],[15,26,19,0],[16,4,19,0],[17,2,19,0],[18,2,1,0],[18,6,1,0,"_zustand"],[18,14,1,0],[18,17,1,0,"require"],[18,24,1,0],[18,25,1,0,"_dependencyMap"],[18,39,1,0],[19,2,2,0],[19,6,2,0,"_servicesApi"],[19,18,2,0],[19,21,2,0,"require"],[19,28,2,0],[19,29,2,0,"_dependencyMap"],[19,43,2,0],[20,2,2,0],[20,6,2,0,"api"],[20,9,2,0],[20,12,2,0,"_interopDefault"],[20,27,2,0],[20,28,2,0,"_servicesApi"],[20,40,2,0],[21,2,19,7],[21,8,19,13,"useStatsStore"],[21,21,19,26],[21,24,19,29],[21,28,19,29,"create"],[21,36,19,35],[21,37,19,35,"create"],[21,43,19,35],[21,45,19,49,"set"],[21,48,19,52],[21,53,19,58],[22,4,20,2,"stats"],[22,9,20,7],[22,11,20,9],[22,15,20,13],[23,4,21,2,"loading"],[23,11,21,9],[23,13,21,11],[23,18,21,16],[24,4,23,2,"fetchStats"],[24,14,23,12],[24,16,23,14],[24,22,23,21,"userUid"],[24,29,23,36],[24,33,23,41],[25,6,24,4,"set"],[25,9,24,7],[25,10,24,8],[26,8,24,10,"loading"],[26,15,24,17],[26,17,24,19],[27,6,24,24],[27,7,24,25],[27,8,24,26],[28,6,25,4],[28,10,25,8],[29,8,26,6,"console"],[29,15,26,13],[29,16,26,14,"log"],[29,19,26,17],[29,20,26,18],[29,47,26,45],[29,48,26,46],[30,8,27,6],[30,14,27,12,"response"],[30,22,27,20],[30,25,27,23],[30,31,27,29,"api"],[30,34,27,32],[30,35,27,32,"default"],[30,42,27,32],[30,43,27,33,"post"],[30,47,27,37],[30,48,27,38],[30,61,27,51],[30,63,27,53],[31,10,28,8,"user_uid"],[31,18,28,16],[31,20,28,18,"userUid"],[32,8,29,6],[32,9,29,7],[32,10,29,8],[33,8,31,6],[33,12,31,10,"response"],[33,20,31,18],[33,21,31,19,"data"],[33,25,31,23],[33,26,31,24,"success"],[33,33,31,31],[33,37,31,35,"response"],[33,45,31,43],[33,46,31,44,"data"],[33,50,31,48],[33,51,31,49,"stats"],[33,56,31,54],[33,58,31,56],[34,10,32,8,"console"],[34,17,32,15],[34,18,32,16,"log"],[34,21,32,19],[34,22,32,20],[34,39,32,37],[34,41,32,39,"response"],[34,49,32,47],[34,50,32,48,"data"],[34,54,32,52],[34,55,32,53,"stats"],[34,60,32,58],[34,61,32,59],[35,10,33,8,"set"],[35,13,33,11],[35,14,33,12],[36,12,33,14,"stats"],[36,17,33,19],[36,19,33,21,"response"],[36,27,33,29],[36,28,33,30,"data"],[36,32,33,34],[36,33,33,35,"stats"],[36,38,33,40],[37,12,33,42,"loading"],[37,19,33,49],[37,21,33,51],[38,10,33,57],[38,11,33,58],[38,12,33,59],[39,8,34,6],[39,9,34,7],[39,15,34,13],[40,10,35,8,"set"],[40,13,35,11],[40,14,35,12],[41,12,35,14,"loading"],[41,19,35,21],[41,21,35,23],[42,10,35,29],[42,11,35,30],[42,12,35,31],[43,8,36,6],[44,6,37,4],[44,7,37,5],[44,8,37,6],[44,15,37,13,"error"],[44,20,37,18],[44,22,37,20],[45,8,38,6,"console"],[45,15,38,13],[45,16,38,14,"error"],[45,21,38,19],[45,22,38,20],[45,46,38,44],[45,47,38,45],[46,8,39,6,"set"],[46,11,39,9],[46,12,39,10],[47,10,39,12,"loading"],[47,17,39,19],[47,19,39,21],[48,8,39,27],[48,9,39,28],[48,10,39,29],[49,6,40,4],[50,4,41,2],[51,2,42,0],[51,3,42,1],[51,4,42,2],[51,5,42,3],[52,0,42,4],[52,3]],"functionMap":{"names":["<global>","create$argument_0","fetchStats"],"mappings":"AAA;gDCkB;cCI;GDkB;EDC"},"hasCjsExports":false},"type":"js/module"}]}